0F803H:Ввод символа с клавиатуры (вых: A - введенный символ)
0F806H:Ввод байта с магнитофона (вх: A = 0FFH - с поиском синхробайта, A = 08H - без поиска)
0F809H:Вывод символа на экран (вх: C = выводимый символ)
0F80CH:Запись байта на магнитофон (вх: C = записываемый байт)
0F80FH:Вывод символа на экран (вх: A = выводимый символ)
0F812H:Опрос состояния клавиатуры (вых: A = 00H - не нажата, A = 0FFH - нажата)
0F815H:Вывод байта на экран в HEX-коде (вх: A = выводимый символ)
0F818H:Вывод на экран сообщений (вх: HL - адрес начала, конечный байт - 00H)
0F81BH:Ввод кода нажатой клавиши inkey  (вых: A = 0FFH - не нажата, A = 0FEH - РУС/ЛАТ, иначе - код клавиши)
0F81EH:Запрос положения курсора (вых: H - номер строки Y, L номер позиции X)
0F821H:Не используется
0F824H:Чтение файла из магнитной ленты
0F827H:Запись файла на магнитную ленту (вх: HL - нач. адрес массива, DE - конечный адрес)
0F82AH:Подсчет контрольной суммы блока (вх: HL - адрес начала, DE - адрес конца; вых: BC - контрольная сумма)
0F82DH:Распаковка внутреннего знакогенератора
0F830H:Чтение конечного адреса ОЗУ пользователя (вых: HL - конечный адрес)
0F833H:Запись конечного адреса ОЗУ пользователя (вх: HL - конечный адрес)
0F836H:Чтение байта из доп. страницы (вх: HL - адрес, A - N страницы (0-3), C - считанный байт)
0F839H:Запись байта в доп. страницы (вх: HL - адрес, A - N страницы (0-3), C - записываемый байт)
0F846H:Порт - Управление цветным режимом
0F849H:Порт - Управление переключением страниц памяти
0F84CH:Порт - Управление переключением экранов
0F855H:Код команды безусловного перехода JMP
0F860H:Значение 6040H (запись - 1200 бод = 40H, чтение - для стандартной скорости = 60H)
0F863H:сохраняем в ячейке. 0F3DAH - ячейка в которой хранится константа записи на магнитную 40H. 0F3DBH - ячейка в которой хранится константа чтения с магнитной ленты = 60H
0F869H:Выводим "orion-128.2"
0F86CH:Начало цикла обработки команд
0F877H:Выводим приглашение для ввода команды "=>"
0F883H:Сохраняем начало цикла обработки команд в HL
0F893H:M <адрес> <ВК>						- Модификация ячеек ОЗУ
0F898H:D <нач. адрес> <номер стр.> <ВК>	- Вывод дампа памяти
0F89DH:I <ВК>								- Ввод с магнитофона
0F8A2H:O <нач. адрес> <конеч. адрес> <ВК>	- Вывод на магнитофон
0F8A7H:R
0F8ACH:Z <ВК>								- Передача управления по адресу 0BFFDH
0F8B1H:C <байт цвета> <ВК>					- Включение цветного режима дисплея
0F8B6H:G <адрес> <ВК>						- Передача управления по адресу
0F8BBH:Переходим на начало цикла обработки команд (см 0F883H)
0F8BCH:Начальный адрес знакогенератора
0F8BFH:сохраняем в ячейке 0F3D1H
0F8C2H:загружаем знакогенератор
0F8C5H:Значение 30C0H
0F8C8H:сохраняем в ячейках: 0C0H -> 0F3CFH (старший байт начала видеопамяти 0C000H), 30H -> 0F3D0H (старший байт размера видеопамяти 3000H = 12К)
0F8CBH:Адрес 0FCD0H (0F809H Вывод символа на экран, 0F855H Код команды безусловного перехода JMP)
0F8CEH:сохраняем в ячейке 0F3CDH
0F8D1H:Значение 0F8DDH
0F8D4H:сохраняем в ячейке 0F3CAH
0F8D7H:Значение 0BFFFH
0F8DAH:сохраняем в ячейке 0F3E3H
0F8E9H:7FH -> Спец. символ инверсия вывода
0F958H:'?'
0F966H:сохраняем аккумулятор и слово состояния
0F967H-0F96AH:Старшие 4 бита загоняем в младшие
0F96BH:Показываем старшие 4 бита (которые загнали в младшие) в HEX формате
0F96EH:Восстанавливаем аккумулятор
0F96FH:Отображаем тетраду (4 младших бита) в HEX формате
0F976H:A -> 'A' (+ 07H + 30H), 'A'=41H, 'B'=42H, 'C'=43H, 'D'=44H, 'E'=45H, 'F'=46H
0F978H:0 -> '0' (+ 30H), '0'=30H,'1'=31H,'2'=32H,'3'=33H,'4'=34H,'5'=35H,'6'=36H,'7'=37H,'8'=38H,'9'=39H
0F97CH:Отображаем HEX символ
0F98EH:Подсчет контрольной суммы блока (вх: HL - адрес начала, DE - адрес конца; вых: BC - контрольная сумма). Обнуляем BC
0F994H:Сохраняем флаги
0F99BH:Восстанавливаем флаги
0F9AAH:Отображаем адрес (H)
0F9AEH:Отображаем адрес (L)
0F9B1H:' '
0F9B6H:----------------------------------------
0F9B7H:Проверяем на конец блока
0F9B8H:в HL - начало блока
0F9B9H:в DE - конец блока
0F9BAH:----------------------------------------
0F9BCH:Запрос положения курсора (вых H - номер строки Y, L номер позиции X)
0F9BFH:0F3D4H -> L (X)
0F9C0H:0F3D5H -> H (Y)
0F9C1H:L делим на 4 
0F9C2H:---------------
0F9C4H:---------------
0F9C5H:L умножаем на 4 
0F9C6H:L -> 0F3D4H (X)
0F9C7H:H -> 0F3D5H (Y)
0F9C8H:---------------
0F9D3H:Адрес начала знакогенератора в ПЗУ (0FE48H - 0FFFFH)
0F9D6H:Адрес знакогенератора в ОЗУ (0F000H - 0F2FFH)
0F9D9H:Знакогенератор содержит символы 5х7 точек
0F9DBH:символы распаковываются в матрицу 8х8
0F9DCH:первая строка всегда = 0 (пустая)
0F9DDH:далее 7 строк символа в формате | XXX | XXXXX |
0F9DEH:где старшие 3 бита кол-во строк + 1, т.е. значение 0 = 1 строка
0F9DFH:младшие 5 бит, строка символа.
0F9E0H:Значение 0С00H -> 11000000, где кол-во строк = 7, строка = 0 -> символ пробела
0F9E1H:Значения 84H, 00H, 04H распаковывается в '!'
0F9E2H:00000000 - всегда пусто
0F9E4H:00000100 - 84H => 5 раз 00100
0F9E5H:00000100 - 84H => 5 раз 00100
0F9E6H:00000100 - 84H => 5 раз 00100
0F9E8H:00000100 - 84H => 5 раз 00100
0F9E9H:00000100 - 84H => 5 раз 00100
0F9EAH:00000000 - 00H
0F9EBH:00000100 - 04H => 1 раз 00100
0F9EFH:Увеличиваем HL
0F9F0H:проверяем на выход за предел границу адреса
0F9F1H:т.е. как перескочим с 0FFFFH на 0000H
0F9F2H:завершаем работу
0FA4EH:Маркер начала/конца данных
0FA77H:Запись байта, каждый бит кодируется двумя сигналами 0 = 10, 1 = 01
0FA78H:       Пример записи 00H
0FA79H: _   _   _   _   _   _   _   _   
0FA7AH:| |_| |_| |_| |_| |_| |_| |_| |_|
0FA7CH: 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 
0FA7DH:|___|___|___|___|___|___|___|___|
0FA7EH:  0   0   0   0   0   0   0   0  
0FA7FH:|_______________|_______________|
0FA81H:        0               0        
0FA85H:       Пример записи 0AAH
0FA88H:   ___     ___     ___     ___   
0FA89H:|_|   |___|   |___|   |___|   |_|
0FA8AH: 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 
0FA8DH:|___|___|___|___|___|___|___|___|
0FA90H:  1   0   1   0   1   0   1   0  
0FA91H:|_______________|_______________|
0FA94H:        A               A        
0FA98H:Загружаем значение паузы для записи на магнитную ленту
0FA9EH:Загружаем значение паузы для чтения с магнитной ленты
0FAEFH: Ввод байта с магнитофона (вх: A = 0FFH - с поиском синхробайта)
0FAF1H: Загружаем адрес начала блока
0FAF5H: Загружаем адрес конца блока
0FAF8H: HL - адрес начала блока, DE - адрес конца блока
0FB05H: Ввод байта с магнитофона (вх: A = 0FFH - с поиском синхробайта)
0FB07H: Загружаем контрольную сумму
0FB0CH: HL - адрес начала блока, DE - адрес конца блока, BC - контрольная сумма
0FB15H: Помещаем в стек контрольную сумму
0FB19H: Извлекаем из стека контрольную сумму
0FB1FH: Проверяем на совпадение загруженную и посчитанную контрольную сумму
0FB22H: Выходим если контрольная сумма совпала
0FB31H: Запись файла на магнитную ленту (вх: HL - нач. адрес массива, DE - конечный адрес)
0FB32H: Вычисляем контрольную сумму записываемого блока
0FB36H: Помещаем в стек контрольную сумму
0FB38H: Запись заголовка: 0 записываем 255 раз
0FB42H: Маркер начала данных
0FB44H: Записываем маркер
0FB47H: Записываем адрес начала блока
0FB4BH: Записываем адрес конца блока
0FB5EH: После данных записываем 2 байта нулей
0FB61H: Маркер конца данных
0FB63H: Записываем маркер
0FB66H: Извлекаем из стека контрольную сумму
0FB67H: Записываем контрольную сумму записываемого блока
0FB86H: Опрос состояния клавиатуры (вых: A = 00H - не нажата, A = 0FFH - нажата)
0FB93H: --------------------------------------------
0FB96H: --------------------------------------------
0FB97H: --------------------------------------------
0FB98H: --------------------------------------------
0FB9AH: Загружаем ROM диск 
0FB9DH: в ОЗУ по адресу 0B800H до 0BFFFH
0FBA0H: т.е. до начала видеопамяти 0C000H.
0FBA3H: В конце загруженного блока
0FBA4H: в последних 3-х байтах (начиная с 0BFFDH)
0FBA5H: должна быть команда jmp на начало программы
0FBA6H: --------------------------------------------
0FBA7H: --------------------------------------------
0FBA9H: --------------------------------------------
0FBACH: --------------------------------------------
0FCD5H:----------------------------------------------------------
0FCD7H: При выводе символа 7F переключаем признак инверсии вывода
0FCDAH: Загружаем признак инверсии вывода
0FCDDH: инвертируем (переключаем)
0FCDEH: Сохраняем признак инверсии вывода
0FCE1H:----------------------------------------------------------
0FCE4H:----------------------------------------------------------
0FCE6H:Проверяем, что код символа меньше пробела (такие не выводим)
0FCE7H:----------------------------------------------------------
0FCEAH:В A индекс символа, для ' ' = 0
0FCEBH:H = 20H, L = A (индекс символа)
0FCECH:так как символ состоит из 8 строк, сдвигаем HL влево (т.е. умножаем на 8)
0FCEDH:H - обнулится, таким образом HL содержит смещение символа от начала знакогенератора
0FCEEH:сохраняем смещение в DE
0FE02H:Старший байт начала экранной области, начало 0C0H -> 0C000H
0FE06H:Старший байт размера экранной области, размер 30H ->  3000H
0FE0AH:Запоминаем старший байт конца экранной области, до этого адреса заполняем
0FE0BH:В HL начало экранной области 0C000H
0FE14H:Проверяем на выход за пределы экранной области
0FE30H:1FH -> Спец. символ для очистки экрана
0FE3EH:0DH (13) -> Спец. символ в начало строки
0FE3FH:0AH (10) -> Спец. символ новая строка
0FE40H:0AH (10) -> Спец. символ новая строка
0FE48H: ' '
0FE49H-0FE4BH: '!'
0FE4CH-0FE4DH: '"'
0FE4EH-0FE52H: '#'
0FE53H-0FE59H: '$'
0FE5AH-0FE60H: '%'
0FE61H-0FE67H: '&'
0FE68H-0FE6AH: '''
0FE6BH-0FE6FH: '('
0FE70H-0FE74H: ')'
0FE75H-0FE7BH: '*'
0FE7CH-0FE80H: '+'
0FE81H-0FE84H: ','
0FE85H-0FE87H: '-'
0FE88H-0FE89H: '.'
0FE8AH-0FE90H: '/'
0FE91H-0FE97H: '0'
0FE98H-0FE9BH: '1'
0FE9CH-0FEA2H: '2'
0FEA3H-0FEA9H: '3'
0FEAAH-0FEAFH: '4'
0FEB0H-0FEB5H: '5'
0FEB6H-0FEBBH: '6'
0FEBCH-0FEC0H: '7'
0FEC1H-0FEC5H: '8'
0FEC6H-0FECBH: '9'
0FECCH-0FECFH: двоеточие
0FED0H-0FED4H: ';'
0FED5H-0FEDBH: '<'
0FEDCH-0FEE0H: '='
0FEE1H-0FEE7H: '>'
0FEE8H-0FEEEH: '?'
0FEEFH-0FEF5H: '@'
0FEF6H-0FEFAH: 'A'
0FEFBH-0FEFFH: 'B'
0FF00H-0FF04H: 'C'
0FF05H-0FF07H: 'D'
0FF08H-0FF0CH: 'E'
0FF0DH-0FF10H: 'F'
0FF11H-0FF16H: 'G'
0FF17H-0FF19H: 'H'
0FF1AH-0FF1CH: 'I'
0FF1DH-0FF1FH: 'J'
0FF20H-0FF26H: 'K'
0FF27H-0FF29H: 'L'
0FF2AH-0FF2DH: 'M'
0FF2EH-0FF32H: 'N'
0FF33H-0FF35H: 'O'
0FF36H-0FF39H: 'P'
0FF3AH-0FF3EH: 'Q'
0FF3FH-0FF44H: 'R'
0FF45H-0FF4BH: 'S'
0FF4CH-0FF4DH: 'T'
0FF4EH-0FF4FH: 'U'
0FF50H-0FF52H: 'Y'
0FF53H-0FF55H: 'W'
0FF56H-0FF5AH: 'X'
0FF5BH-0FF5DH: 'Y'
0FF5EH-0FF64H: 'Z'
0FF65H-0FF67H: '['
0FF68H-0FF6EH: '\'
0FF6FH-0FF71H: ']'
0FF72H-0FF74H: '^'
0FF75H-0FF76H: '_'
0FF77H-0FF7BH: 'Ю'
0FF7CH-0FF80H: 'А'
0FF81H-0FF85H: 'Б'
0FF86H-0FF88H: 'Ц'
0FF89H-0FF8CH: 'Д'
0FF8DH-0FF91H: 'Е'
0FF92H-0FF96H: 'Ф'
0FF97H-0FF99H: 'Г'
0FF9AH-0FF9EH: 'Х'
0FF9FH-0FFA3H: 'И'
0FFA4H-0FFA9H: 'Й'
0FFAAH-0FFB0H: 'К'
0FFB1H-0FFB3H: 'Л'
0FFB4H-0FFB7H: 'М'
0FFB8H-0FFBAH: 'Н'
0FFBBH-0FFBDH: 'О'
0FFBEH-0FFBFH: 'П'
0FFC0H-0FFC5H: 'Я'
0FFC6H-0FFC9H: 'Р'
0FFCAH-0FFCEH: 'С'
0FFCFH-0FFD0H: 'Т'
0FFD1H-0FFD5H: 'У'
0FFD6H-0FFDAH: 'Ж'
0FFDBH-0FFDFH: 'В'
0FFE0H-0FFE3H: 'Ь'
0FFE4H-0FFE7H: 'Ы'
0FFE8H-0FFEEH: 'З'
0FFEFH-0FFF1H: 'Ш'
0FFF2H-0FFF8H: 'Э'
0FFF9H-0FFFBH: 'Щ'
0FFFCH-0FFFEH: 'Ч'
0FFFFH: черный прямоугольник